name: ci

on:
  pull_request:
  push:
    branches: [main]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: 20

jobs:
  lint-build-unit:
    name: Lint, build, unit/dom tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Install
        run: npm ci

      - name: Lint( no warnings allowed on ci)
        run: npm run lint:ci

      - name: Build
        run: npm run build

      - name: Unit/DOM tests (Vitest)
        run: npm run test

      - name: Upload coverage report
        if: always() && hashFiles('coverage/**') != ''
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: coverage
          retention-days: 7
  e2e:
    name: Playwright E2E
    needs: lint-build-unit
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node ${{ env.NODE_VERSION }} (with npm cache)
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install
        run: npm ci

      - name: Install playwright browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Upload Playwright report
        if: always() && hashFiles('playwright-report/**') != ''
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 7

      - name: Upload Playwright traces
        if: always() && hashFiles('test-results/**') != ''
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces
          path: |
            test-results
            playwright-report/data/*trace*.zip
          retention-days: 7
  release:
    name: Semantic Release
    needs: [lint-build-unit, e2e]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
